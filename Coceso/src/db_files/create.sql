CREATE SEQUENCE unit_id_seq;
CREATE SEQUENCE person_id_seq;
CREATE SEQUENCE log_id_seq;
CREATE SEQUENCE incident_id_seq;
CREATE SEQUENCE point_id_seq;
CREATE SEQUENCE caze_id_seq;
CREATE SEQUENCE role_id_seq;


CREATE TABLE point (
  id INTEGER NOT NULL DEFAULT nextval('point_id_seq'),
  info TEXT NOT NULL DEFAULT(''),
  longitude DOUBLE PRECISION NOT NULL DEFAULT (0),
  latitude DOUBLE PRECISION NOT NULL DEFAULT (0),
  PRIMARY KEY (id)
);

CREATE TABLE caze (
  id INTEGER NOT NULL DEFAULT nextval('caze_id_seq'),
  point INTEGER,
  name VARCHAR(64) NOT NULL,
  info TEXT NOT NULL DEFAULT(''),
  pax INTEGER NOT NULL DEFAULT(0),
  closed BOOLEAN NOT NULL DEFAULT(FALSE),
  PRIMARY KEY (id),
  FOREIGN KEY (point) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE unit (
  id INTEGER DEFAULT nextval('unit_id_seq'),
  caze INTEGER NOT NULL,
  state INTEGER NOT NULL,
  call VARCHAR (64) NOT NULL,
  ani VARCHAR (16) NOT NULL,
  withDoc BOOLEAN NOT NULL,
  portable BOOLEAN NOT NULL,
  transportVehicle BOOLEAN NOT NULL,
  info TEXT NOT NULL,
  position integer,
  home integer,
  PRIMARY KEY (id),
  FOREIGN KEY (caze) REFERENCES caze ON DELETE CASCADE,
  FOREIGN KEY (position) REFERENCES point ON DELETE SET NULL,
  FOREIGN KEY (home) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE person (
  id INTEGER NOT NULL DEFAULT nextval('person_id_seq'),
  given_name VARCHAR (32) NOT NULL ,
  sur_name VARCHAR (32) NOT NULL,
  dnr INTEGER NOT NULL,
  contact TEXT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE uzer (
  id INTEGER NOT NULL,
  caze INTEGER NOT NULL DEFAULT(-1),
  allowLogin BOOLEAN NOT NULL,
  username VARCHAR (32) NOT NULL,
  hashedPW TEXT,
  PRIMARY KEY (id),
  FOREIGN KEY (id) REFERENCES person ON DELETE CASCADE,
  FOREIGN KEY (caze) REFERENCES caze ON DELETE SET NULL
);

CREATE TABLE role (
  id INTEGER NOT NULL DEFAULT nextval('role_id_seq'),
  descr TEXT,
  PRIMARY KEY (id)
);

CREATE TABLE userrole (
  uzer INTEGER NOT NULL,
  role INTEGER NOT NULL,
  PRIMARY KEY (uzer, role),
  FOREIGN KEY (uzer) REFERENCES uzer
);


CREATE TABLE crew (
  unit_id integer NOT NULL,
  person_id integer NOT NULL,
  PRIMARY KEY (unit_id, person_id),
  FOREIGN KEY (unit_id) REFERENCES unit ON DELETE CASCADE,
  FOREIGN KEY (person_id) REFERENCES person ON DELETE CASCADE
);

CREATE TABLE incident (
  id INTEGER NOT NULL DEFAULT nextval('incident_id_seq'),
  caze INTEGER NOT NULL,
  state INTEGER NOT NULL,
  type INTEGER NOT NULL,
  priority INTEGER NOT NULL,
  blue BOOLEAN NOT NULL,
  bo INTEGER,
  ao INTEGER,
  info TEXT,
  caller VARCHAR (40),
  casusNr VARCHAR (30),
  PRIMARY KEY (id),
  FOREIGN KEY (caze) REFERENCES caze ON DELETE CASCADE,
  FOREIGN KEY (bo) REFERENCES point ON DELETE SET NULL,
  FOREIGN KEY (ao) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE log (
  id INTEGER NOT NULL DEFAULT nextval('log_id_seq'),
  caze INTEGER NOT NULL,
  timestamp TIMESTAMP NOT NULL,
  unit INTEGER,
  incident INTEGER,
  taskstate INTEGER ,
  autoGenerated BOOLEAN NOT NULL,
  uzer INTEGER NOT NULL,
  text VARCHAR (128),
  json TEXT,
  PRIMARY KEY (id),
  FOREIGN KEY (caze) REFERENCES caze ON DELETE NO ACTION,
  FOREIGN KEY (unit) REFERENCES unit ON DELETE NO ACTION,
  FOREIGN KEY (incident) REFERENCES incident ON DELETE NO ACTION,
  FOREIGN KEY (uzer) REFERENCES uzer ON DELETE NO ACTION
);



CREATE TABLE tasks (
  incident_id INTEGER NOT NULL,
  unit_id INTEGER NOT NULL,
  state INTEGER,
  PRIMARY KEY (incident_id, unit_id),
  FOREIGN KEY (incident_id) REFERENCES incident ON DELETE CASCADE,
  FOREIGN KEY (unit_id) REFERENCES unit ON DELETE CASCADE
);