CREATE SEQUENCE unit_id_seq;
CREATE SEQUENCE person_id_seq;
CREATE SEQUENCE log_id_seq;
CREATE SEQUENCE incident_id_seq;
CREATE SEQUENCE point_id_seq;
CREATE SEQUENCE concern_id_seq;
CREATE SEQUENCE role_id_seq;


CREATE SEQUENCE hibernate_sequence
INCREMENT 1
MINVALUE 1
MAXVALUE 9223372036854775807
START 1
CACHE 1;



CREATE TABLE point (
  id INTEGER NOT NULL DEFAULT nextval('point_id_seq'),
  info TEXT NOT NULL DEFAULT(''),
  longitude DOUBLE PRECISION NOT NULL DEFAULT (0),
  latitude DOUBLE PRECISION NOT NULL DEFAULT (0),
  PRIMARY KEY (id)
);

CREATE TABLE concern (
  id INTEGER NOT NULL DEFAULT nextval('concern_id_seq'),
  point_fk INTEGER,
  name VARCHAR(64) NOT NULL,
  info TEXT NOT NULL DEFAULT(''),
  pax INTEGER NOT NULL DEFAULT(0),
  closed BOOLEAN NOT NULL DEFAULT(FALSE),
  PRIMARY KEY (id),
  FOREIGN KEY (point_fk) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE unit (
  id INTEGER NOT NULL DEFAULT nextval('unit_id_seq'),
  concern_fk INTEGER NOT NULL,
  state VARCHAR (16) NOT NULL,
  call VARCHAR (64) NOT NULL,
  ani VARCHAR (16) NOT NULL,
  withDoc BOOLEAN NOT NULL,
  portable BOOLEAN NOT NULL,
  transportVehicle BOOLEAN NOT NULL,
  info TEXT NOT NULL,
  position_point_fk integer,
  home_point_fk integer,
  PRIMARY KEY (id),
  FOREIGN KEY (concern_fk) REFERENCES concern ON DELETE CASCADE,
  FOREIGN KEY (position_point_fk) REFERENCES point ON DELETE SET NULL,
  FOREIGN KEY (home_point_fk) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE person (
  id INTEGER NOT NULL DEFAULT nextval('person_id_seq'),
  given_name VARCHAR (64) NOT NULL ,
  sur_name VARCHAR (64) NOT NULL,
  dnr INTEGER NOT NULL,
  contact TEXT NOT NULL,
  PRIMARY KEY (id)
);

CREATE TABLE operator (
  id INTEGER NOT NULL,
  concern_fk INTEGER,
  allowLogin BOOLEAN NOT NULL,
  username VARCHAR (32) NOT NULL,
  hashedPW TEXT,
  PRIMARY KEY (id),
  FOREIGN KEY (id) REFERENCES person ON DELETE CASCADE,
  FOREIGN KEY (concern_fk) REFERENCES concern ON DELETE SET NULL
);

CREATE TABLE operator_role (
  operator_fk INTEGER NOT NULL,
  role VARCHAR (16) NOT NULL,
  PRIMARY KEY (operator_fk, role)
);

CREATE TABLE crew (
  unit_fk integer NOT NULL,
  person_fk integer NOT NULL,
  PRIMARY KEY (unit_fk, person_fk),
  FOREIGN KEY (unit_fk) REFERENCES unit ON DELETE CASCADE,
  FOREIGN KEY (person_fk) REFERENCES person ON DELETE CASCADE
);

CREATE TABLE incident (
  id INTEGER NOT NULL DEFAULT nextval('incident_id_seq'),
  concern_fk INTEGER NOT NULL,
  state VARCHAR (16) NOT NULL,
  type VARCHAR (16) NOT NULL,
  priority INTEGER NOT NULL,
  blue BOOLEAN NOT NULL,
  bo_point_fk INTEGER,
  ao_point_fk INTEGER,
  info TEXT,
  caller VARCHAR (40),
  casusNr VARCHAR (30),
  PRIMARY KEY (id),
  FOREIGN KEY (concern_fk) REFERENCES concern ON DELETE CASCADE,
  FOREIGN KEY (bo_point_fk) REFERENCES point ON DELETE SET NULL,
  FOREIGN KEY (ao_point_fk) REFERENCES point ON DELETE SET NULL
);

CREATE TABLE log (
  id INTEGER NOT NULL DEFAULT nextval('log_id_seq'),
  concern_fk INTEGER NOT NULL,
  timestamp TIMESTAMP NOT NULL,
  unit_fk INTEGER,
  type VARCHAR (60),
  incident_fk INTEGER,
  taskstate VARCHAR (16),
  autoGenerated BOOLEAN NOT NULL,
  operator_fk INTEGER NOT NULL,
  text VARCHAR (128),
  json TEXT,
  PRIMARY KEY (id),
  FOREIGN KEY (concern_fk) REFERENCES concern ON DELETE NO ACTION,
  FOREIGN KEY (unit_fk) REFERENCES unit ON DELETE NO ACTION,
  FOREIGN KEY (incident_fk) REFERENCES incident ON DELETE NO ACTION,
  FOREIGN KEY (operator_fk) REFERENCES operator ON DELETE NO ACTION
);

CREATE TABLE task (
  incident_fk INTEGER NOT NULL,
  unit_fk INTEGER NOT NULL,
  state VARCHAR (16),
  PRIMARY KEY (incident_fk, unit_fk),
  FOREIGN KEY (incident_fk) REFERENCES incident ON DELETE CASCADE,
  FOREIGN KEY (unit_fk) REFERENCES unit ON DELETE CASCADE
);

CREATE TABLE patient (
  incident_fk INTEGER NOT NULL,
  given_name VARCHAR (64) NOT NULL DEFAULT '',
  sur_name VARCHAR (64) NOT NULL DEFAULT '',
  insurance_number VARCHAR (40) NOT NULL DEFAULT '',
  diagnosis TEXT NOT NULL DEFAULT '',
  er_type VARCHAR (40) NOT NULL DEFAULT '',
  info TEXT NOT NULL DEFAULT '',
  external_id VARCHAR (40) NOT NULL DEFAULT '',
  PRIMARY KEY (incident_fk),
  FOREIGN KEY (incident_fk) REFERENCES incident ON DELETE CASCADE
);
