package at.wrk.coceso.controller.view;

import at.wrk.coceso.dao.ConcernDao;
import at.wrk.coceso.entity.Concern;
import at.wrk.coceso.utils.Logger;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import org.omg.CORBA.Environment;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.context.annotation.PropertySource;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.ExceptionHandler;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.ModelAndView;

import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.Date;

@Controller
@RequestMapping("/finalReport")
public class FinalReportController {

    @Autowired
    ConcernDao concernDao;

    @RequestMapping(value = "print", produces = "application/pdf")
    public void print(HttpServletResponse response, @RequestParam(value = "id") int id){

        /*int id;
        try {
            id = Integer.parseInt(s_id);
        } catch (NumberFormatException e) {
            throw new ConcernNotFoundException();
        }  */

        Document document = new Document();

        Concern concern = concernDao.getById(id);
        if(concern == null) {

        }

        //response.setContentType("application/pdf");
        try {
            PdfWriter.getInstance(document, response.getOutputStream());
            document.open();

            addMeta(document, concern);
            addFrontPage(document, concern);
        }
        catch(IOException e) {
            Logger.error("FinalReportController:print(): " + e.getMessage());
        }
        catch(DocumentException e) {
            Logger.error("FinalReportController:print(): "+e.getMessage());
        }
        finally {
            document.close();
        }

    }

    private static Font catFont = new Font(Font.FontFamily.TIMES_ROMAN, 18,
            Font.BOLD);
    private static Font redFont = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.NORMAL, BaseColor.RED);
    private static Font smallBold = new Font(Font.FontFamily.TIMES_ROMAN, 12,
            Font.BOLD);

    private void addMeta(Document document, Concern concern) throws DocumentException {
        document.addTitle("Abschlussbericht der Ambulanz " + concern.getName());
        document.addAuthor("CoCeSo");
        document.addCreator("CoCeSo - "); //TODO User
    }

    private void addFrontPage(Document document, Concern concern) throws DocumentException {
        Paragraph preface = new Paragraph();
        addEmptyLine(preface, 1);
        preface.add(new Paragraph("Abschlussbericht der Ambulanz " + concern.getName(), catFont));

        addEmptyLine(preface, 1);

        preface.add(new Paragraph("Report generated by: " + "UNKNOWN", // TODO User
                smallBold));
        addEmptyLine(preface, 3);
        preface.add(new Paragraph("To be filled with Information ",
                smallBold));

        addEmptyLine(preface, 8);

        preface.add(new Paragraph("and more information",
                redFont));

        document.add(preface);
        document.newPage();
    }

    private void addStatistics(Document document) throws DocumentException {

    }

    private void addUnitStats(Document document) throws DocumentException {

    }

    private void addIncidentStats(Document document) throws DocumentException {

    }

    private static void addEmptyLine(Paragraph paragraph, int number) {
        for (int i = 0; i < number; i++) {
            paragraph.add(new Paragraph(" "));
        }
    }

    @ExceptionHandler(ConcernNotFoundException.class)
    public String error() {
        return "redirect:/welcome";
    }

    private class ConcernNotFoundException extends Error {
    }
}
